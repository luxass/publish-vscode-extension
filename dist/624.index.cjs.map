{"version":3,"file":"624.index.cjs","sources":["webpack://action-publish-vscode-extension/./node_modules/.pnpm/url-join@5.0.0/node_modules/url-join/lib/url-join.js"],"sourcesContent":["function normalize (strArray) {\n  var resultArray = [];\n  if (strArray.length === 0) { return ''; }\n\n  if (typeof strArray[0] !== 'string') {\n    throw new TypeError('Url must be a string. Received ' + strArray[0]);\n  }\n\n  // If the first part is a plain protocol, we combine it with the next part.\n  if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n    var first = strArray.shift();\n    strArray[0] = first + strArray[0];\n  }\n\n  // There must be two or three slashes in the file protocol, two slashes in anything else.\n  if (strArray[0].match(/^file:\\/\\/\\//)) {\n    strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n  } else {\n    strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n  }\n\n  for (var i = 0; i < strArray.length; i++) {\n    var component = strArray[i];\n\n    if (typeof component !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + component);\n    }\n\n    if (component === '') { continue; }\n\n    if (i > 0) {\n      // Removing the starting slashes for each component but the first.\n      component = component.replace(/^[\\/]+/, '');\n    }\n    if (i < strArray.length - 1) {\n      // Removing the ending slashes for each component but the last.\n      component = component.replace(/[\\/]+$/, '');\n    } else {\n      // For the last component we will combine multiple slashes to a single one.\n      component = component.replace(/[\\/]+$/, '/');\n    }\n\n    resultArray.push(component);\n\n  }\n\n  var str = resultArray.join('/');\n  // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n  // remove trailing slash before parameters or hash\n  str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n  // replace ? in parameters with &\n  var parts = str.split('?');\n  str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n  return str;\n}\n\nexport default function urlJoin() {\n  var input;\n\n  if (typeof arguments[0] === 'object') {\n    input = arguments[0];\n  } else {\n    input = [].slice.call(arguments);\n  }\n\n  return normalize(input);\n}\n"],"names":["urlJoin","input","arguments","normalize","strArray","resultArray","TypeError","first","i","component","str","parts"],"mappings":"qHA2De,SAASA,IACtB,IAAIC,EAQJ,OALEA,EADE,AAAwB,UAAxB,OAAOC,SAAS,CAAC,EAAE,CACbA,SAAS,CAAC,EAAE,CAEZ,EAAE,CAAC,KAAK,CAAC,IAAI,CAACA,WAGjBC,AApET,SAAoBC,CAAQ,EAC1B,IAAIC,EAAc,EAAE,CACpB,GAAID,AAAoB,IAApBA,EAAS,MAAM,CAAU,MAAO,GAEpC,GAAI,AAAuB,UAAvB,OAAOA,CAAQ,CAAC,EAAE,CACpB,MAAM,AAAIE,UAAU,kCAAoCF,CAAQ,CAAC,EAAE,EAIrE,GAAIA,CAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAmBA,EAAS,MAAM,CAAG,EAAG,CAC5D,IAAIG,EAAQH,EAAS,KAAK,EAC1BA,CAAAA,CAAQ,CAAC,EAAE,CAAGG,EAAQH,CAAQ,CAAC,EAAE,AACnC,CAGIA,CAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,gBACpBA,CAAQ,CAAC,EAAE,CAAGA,CAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAiB,UAEnDA,CAAQ,CAAC,EAAE,CAAGA,CAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAiB,SAGrD,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAS,MAAM,CAAEI,IAAK,CACxC,IAAIC,EAAYL,CAAQ,CAACI,EAAE,CAE3B,GAAI,AAAqB,UAArB,OAAOC,EACT,MAAM,AAAIH,UAAU,kCAAoCG,GAG1D,GAAIA,AAAc,KAAdA,EAEAD,EAAI,GAENC,CAAAA,EAAYA,EAAU,OAAO,CAAC,SAAU,GAAE,EAI1CA,EAFED,EAAIJ,EAAS,MAAM,CAAG,EAEZK,EAAU,OAAO,CAAC,SAAU,IAG5BA,EAAU,OAAO,CAAC,SAAU,KAG1CJ,EAAY,IAAI,CAACI,EAEnB,CAEA,IAAIC,EAAML,EAAY,IAAI,CAAC,KAOvBM,EAAQD,AAHZA,CAAAA,EAAMA,EAAI,OAAO,CAAC,kBAAmB,KAAI,EAGzB,KAAK,CAAC,KAGtB,OAFAA,EAAMC,EAAM,KAAK,GAAMA,CAAAA,EAAM,MAAM,CAAG,EAAI,IAAK,EAAC,EAAKA,EAAM,IAAI,CAAC,IAGlE,EAWmBV,EACnB,C"}